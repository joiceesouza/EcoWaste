// <auto-generated />
using System;
using EcoWaste.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoWaste.DataAccess.Migrations
{
    [DbContext(typeof(EcoTrackDbContext))]
    partial class EcoTrackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoWaste.Core.Entities.Coleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<double>("QuantidadeKg")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("QUANTIDADE_KG");

                    b.Property<int>("ResiduoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RESIDUO_ID");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USUARIO_ID");

                    b.HasKey("Id")
                        .HasName("PK_COLETA");

                    b.HasIndex("ResiduoId")
                        .HasDatabaseName("IX_COLETA_RESIDUO_ID");

                    b.ToTable("COLETA", (string)null);
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.PontoColeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.HasKey("Id")
                        .HasName("PK_PONTO_COLETA");

                    b.ToTable("PONTO_COLETA", (string)null);
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.PontoColetaResiduo", b =>
                {
                    b.Property<int>("PontoColetaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PONTO_COLETA_ID");

                    b.Property<int>("ResiduoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RESIDUO_ID");

                    b.HasKey("PontoColetaId", "ResiduoId")
                        .HasName("PK_PONTO_COLETA_RESIDUO");

                    b.HasIndex("ResiduoId")
                        .HasDatabaseName("IX_PONTO_COLETA_RESIDUO_RESIDUO_ID");

                    b.ToTable("PONTO_COLETA_RESIDUO", (string)null);
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.Residuo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<int?>("PontoColetaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PONTOCOLETAID");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPO");

                    b.HasKey("Id")
                        .HasName("PK_RESIDUO");

                    b.HasIndex("PontoColetaId")
                        .HasDatabaseName("IX_RESIDUO_PONTOCOLETAID");

                    b.ToTable("RESIDUO", (string)null);
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.Coleta", b =>
                {
                    b.HasOne("EcoWaste.Core.Entities.Residuo", "Residuo")
                        .WithMany("Coletas")
                        .HasForeignKey("ResiduoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_COLETA_RESIDUO_RESIDUO_ID");

                    b.Navigation("Residuo");
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.PontoColetaResiduo", b =>
                {
                    b.HasOne("EcoWaste.Core.Entities.PontoColeta", "PontoColeta")
                        .WithMany("PontoColetaResiduos")
                        .HasForeignKey("PontoColetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PONTOCOLETA_RESIDUO_PONTOCOLETA");

                    b.HasOne("EcoWaste.Core.Entities.Residuo", "Residuo")
                        .WithMany("PontoColetaResiduos")
                        .HasForeignKey("ResiduoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PONTOCOLETA_RESIDUO_RESIDUO");

                    b.Navigation("PontoColeta");

                    b.Navigation("Residuo");
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.Residuo", b =>
                {
                    b.HasOne("EcoWaste.Core.Entities.PontoColeta", null)
                        .WithMany("TiposResiduosAceitos")
                        .HasForeignKey("PontoColetaId")
                        .HasConstraintName("FK_RESIDUO_PONTO_COLETA_PONTOCOLETAID");
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.PontoColeta", b =>
                {
                    b.Navigation("PontoColetaResiduos");

                    b.Navigation("TiposResiduosAceitos");
                });

            modelBuilder.Entity("EcoWaste.Core.Entities.Residuo", b =>
                {
                    b.Navigation("Coletas");

                    b.Navigation("PontoColetaResiduos");
                });
#pragma warning restore 612, 618
        }
    }
}
